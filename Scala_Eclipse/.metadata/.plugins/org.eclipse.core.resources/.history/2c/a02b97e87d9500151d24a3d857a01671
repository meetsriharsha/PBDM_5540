import org.apache.spark.SparkContext._
import org.apache.spark.{SparkConf, SparkContext}
import com.google.gson.Gson
import org.apache.spark.sql.SQLContext
import org.apache.spark.SparkContext

object TweetCount {
  private var gson = new Gson()
  def main(args: Array[String]) {
    val conf = new SparkConf().setAppName("TweetCount")
    conf.setMaster("local")
    val sc = new SparkContext(conf)
    val sqlContext = new SQLContext(sc)
    val tweets = sc.textFile("D:/UMKC/Docs/Subjects/PBDM/PB_Project/iphone6s.json")
    //.map(gson.toJson(_))
   // println(tweets.first())
    //tweets.collect()
    val userMap = tweets.map(x => ((extractUserId(x),extractLang(x)), 1))
    val numTweetsByUser = userMap.reduceByKey((a, b) => a + b)
    numTweetsByUser.repartition(1).saveAsTextFile("D:/UMKC/Docs/Subjects/PBDM/PB_Project/userCount")
//    val tweet = sqlContext.load("D:/UMKC/Docs/Subjects/PBDM/PB_Project/iphone6s.json", "json")
  //  tweet.printSchema()
    //println(tweet.select("quoted_status.user.id_str").rdd)
    //val userMp = tweet.map { x => ( }
  }

  def extractUserId(x: String): String = {
    val userIdPattern = "\"user\"\\:\\{\"id\"\\:([^,]+)".r
    val userId = userIdPattern.findFirstMatchIn(x).map(x => x.group(1)).getOrElse("Bad Receiver ID")
    userId
  }
  def extractLang(x: String): String = {
    val userIdPattern = "\"user\"\\:\\{\"id\".*\"lang\"\\:".r
    val userId = userIdPattern.findFirstMatchIn(x).map(x => x.group(1)).getOrElse("Bad Receiver ID")
    userId
  }
}